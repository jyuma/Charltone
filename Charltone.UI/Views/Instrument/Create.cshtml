@model Charltone.UI.ViewModels.Instrument.InstrumentEditViewModel

@{
    ViewBag.Title = "Create Instrument";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(document).ready(function () {
        instrument.edit.init(
        {
            photoId: parseInt(@Model.DefaultPhotoId),
            maxImageWidth: parseInt(@Model.MaxImageWidth),
            maxImageHeight: parseInt(@Model.MaxImageHeight)
        });
    });
</script>

@using (Html.BeginForm())
{
    <div id="instredit">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h3>Create a new Instrument</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-md-7">
                    <div>
                        <button class="btn btn-default" type="button" onclick="location.href='@Url.Action("Index", "Instrument")'">Cancel</button>
                        <button class="btn btn-primary" type="submit">Save</button>
                    </div>
                    <div>
                        @Html.LabelFor(model => model.InstrumentTypes, new { @class = "label label-default" })
                        @Html.DropDownListFor(x => x.InstrumentTypeId, Model.InstrumentTypes, new { @class = "form-control" })
                    </div>
                    <div>
                        @Html.Label("Model", new { @class = "label label-default" })
                        @Html.TextBoxFor(model => model.Model, new { @class = "form-control", required = "required" })
                    </div>
                    <div>
                        @Html.Label("Serial Number", new { @class = "label label-default" })
                        @Html.TextBoxFor(model => model.Sn, new { @class = "form-control", required = "required" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.ClassificationTypes, new { @class = "label label-default" })
                        @Html.DropDownListFor(x => x.ClassificationId, Model.ClassificationTypes, new { @class = "form-control" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.SubClassificationTypes, new { @class = "label label-default" })
                        @Html.DropDownListFor(x => x.SubClassificationId, Model.SubClassificationTypes, new { @class = "form-control" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.StatusTypes, new { @class = "label label-default" })
                        @Html.DropDownListFor(x => x.StatusId, Model.StatusTypes, new { @class = "form-control" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.DisplayPrice, new { @class = "label label-default" })
                        @Html.TextBoxFor(model => model.DisplayPrice, new { @class = "form-control", required = "required" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.Price, new { @class = "label label-default" })
                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", required = "required" })
                    </div>
                </div>
                <div class="col-md-3 col-md-offset-1">
                    <img class="img-rounded" id="instreditphoto" alt="" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Top, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Top, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.BackAndSides, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.BackAndSides, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Body, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Body, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Binding, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Binding, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Bridge, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Bridge, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.CaseDetail, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.CaseDetail, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Dimensions, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Dimensions, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.EdgeDots, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.EdgeDots, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Faceplate, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Faceplate, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Finish, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Finish, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Fingerboard, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Fingerboard, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.FretMarkers, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.FretMarkers, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.FretWire, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.FretWire, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Neck, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Neck, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.NutWidth, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.NutWidth, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.PickGuard, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.PickGuard, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Pickup, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Pickup, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ScaleLength, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.ScaleLength, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Strings, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Strings, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Tailpiece, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Tailpiece, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Tuners, new { @class = "label label-default" })
                    @Html.TextBoxFor(model => model.Tuners, new { @class = "form-control", @maxlength = 50 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Comments, new { @class = "label label-default" })
                    @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @maxlength = 200 })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.FunFacts, new { @class = "label label-default" })
                    @Html.TextAreaFor(model => model.FunFacts, new { @class = "form-control", @maxlength = 200 })
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <button class="btn btn-default" type="button" onclick="location.href='@Url.Action("Index", "Instrument")'">Cancel</button>
                    <button class="btn btn-primary" type="submit">Save</button>
                </div>
            </div>
        </div>
    </div>
}