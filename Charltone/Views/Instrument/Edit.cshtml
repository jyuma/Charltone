@model Charltone.UI.ViewModels.Instrument.InstrumentEditViewModel

@{
    ViewBag.Title = "Edit Instrument";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="editinstrument">
    @using (Html.BeginForm())
    {
    <div class="editinstrcontainer">
        @Html.ValidationSummary(true)
        <div class="editinstrinfo">
             <div class="editinstrbuttons">
                <input class="savebutton" type="submit" value="Save" name="Command"/>
                &nbsp
                @Html.ActionLink("Photos", "Photos", new { id = Model.ProductId })
                &nbsp
                @Html.ActionLink("Main List", "Index", "Instrument")        
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.InstrumentTypes)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(x => x.InstrumentTypeId, Model.InstrumentTypes)
            </div>
            <div class="editor-label">
                @Html.Label("Model/SN")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Model)
                @Html.ValidationMessageFor(model => model.Model)
                @Html.EditorFor(model => model.Sn)
                @Html.ValidationMessageFor(model => model.Sn)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ClassificationTypes)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(x => x.ClassificationId, Model.ClassificationTypes)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SubClassificationTypes)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(x => x.SubClassificationId, Model.SubClassificationTypes)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Top)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Top)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.BackAndSides)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.BackAndSides)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Body)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Body)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Binding)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Binding)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Neck)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Neck)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Faceplate)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Faceplate)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Fingerboard)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Fingerboard)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.FretMarkers)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.FretMarkers)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.EdgeDots)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.EdgeDots)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Bridge)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Bridge)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Finish)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Finish)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Tuners)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Tuners)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PickGuard)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.PickGuard)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Pickup)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Pickup)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.NutWidth)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.NutWidth)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ScaleLength)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.ScaleLength)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.CaseDetail)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.CaseDetail)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Strings)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Strings)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Comments)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Comments)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.FunFacts)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.FunFacts)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.StatusTypes)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(x => x.StatusId, Model.StatusTypes)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DisplayPrice)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DisplayPrice)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Price)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => Model.IsPosted)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => Model.IsPosted)
            </div>
        </div>

        <div>
            <img class="editinstrphotoimg" src=@Url.Action("GetPhoto", "Instrument", new { id = Model.DefaultPhotoId }) alt=""/>
        </div>

    </div>

    }
</div>